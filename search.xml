<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>python获取万年历数据，判断一年中的某一天是否为节假日</title>
    <url>/2019/11/14/python%E8%8E%B7%E5%8F%96%E4%B8%87%E5%B9%B4%E5%8E%86%E6%95%B0%E6%8D%AE%EF%BC%8C%E5%88%A4%E6%96%AD%E4%B8%80%E5%B9%B4%E4%B8%AD%E7%9A%84%E6%9F%90%E4%B8%80%E5%A4%A9%E6%98%AF%E5%90%A6%E4%B8%BA%E8%8A%82%E5%81%87%E6%97%A5/</url>
    <content><![CDATA[<p><strong>公司最近有一个需求需要给后端提供一份万年历数据。显示一年中的每一天是工作日就还是节假日。网上有一些api接口，当然这些接口时需要收费的。我整理了一下网上的资料，写了一些代码来完成这个任务。</strong><br>首先获取一年中的所有日期：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">isLeapYear</span><span class="params">(years)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    通过判断闰年，获取年份years下一年的总天数</span></span><br><span class="line"><span class="string">    :param years: 年份，int</span></span><br><span class="line"><span class="string">    :return:days_sum，一年的总天数</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    <span class="comment"># 断言：年份不为整数时，抛出异常。</span></span><br><span class="line">    <span class="keyword">assert</span> isinstance(years, int)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ((years % <span class="number">4</span> == <span class="number">0</span> <span class="keyword">and</span> years % <span class="number">100</span> != <span class="number">0</span>) <span class="keyword">or</span> (years % <span class="number">400</span> == <span class="number">0</span>)):  <span class="comment"># 判断是否是闰年</span></span><br><span class="line">        <span class="comment"># print(years, "是闰年")</span></span><br><span class="line">        days_sum = <span class="number">366</span></span><br><span class="line">        <span class="keyword">return</span> days_sum</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># print(years, '不是闰年')</span></span><br><span class="line">        days_sum = <span class="number">365</span></span><br><span class="line">        <span class="keyword">return</span> days_sum</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getAllDayPerYear</span><span class="params">(years)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    获取一年的所有日期</span></span><br><span class="line"><span class="string">    :param years:年份</span></span><br><span class="line"><span class="string">    :return:全部日期列表</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    start_date = <span class="string">'%s-1-1'</span> % years</span><br><span class="line">    a = <span class="number">0</span></span><br><span class="line">    all_date_list = []</span><br><span class="line">    days_sum = isLeapYear(int(years))</span><br><span class="line">    <span class="keyword">while</span> a &lt; days_sum:</span><br><span class="line">        b = arrow.get(start_date).shift(days=a).format(<span class="string">"YYYY-MM-DD"</span>)</span><br><span class="line">        a += <span class="number">1</span></span><br><span class="line">        <span class="keyword">yield</span> b</span><br></pre></td></tr></table></figure>
<p>然后安装chinese_calendar：pip install chinese_calendar<br>githup地址:<a href="https://github.com/LKI/chinese-calendar" target="_blank" rel="noopener">https://github.com/LKI/chinese-calendar</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">all_date_list = getAllDayPerYear(<span class="string">"2019"</span>)</span><br><span class="line">        url = <span class="string">'https://www.baidu.com/'</span></span><br><span class="line">        <span class="keyword">for</span> date <span class="keyword">in</span> all_date_list:</span><br><span class="line">            item = &#123;&#125;</span><br><span class="line">            startTime = datetime.datetime.strptime(date, <span class="string">'%Y-%m-%d'</span>)</span><br><span class="line">            <span class="keyword">from</span> chinese_calendar <span class="keyword">import</span> is_workday, is_holiday</span><br><span class="line">            date_type = <span class="string">'节假日'</span></span><br><span class="line">            <span class="keyword">if</span> is_workday(startTime):</span><br><span class="line">                date_type = <span class="string">'工作日'</span></span><br><span class="line">            item[<span class="string">'date_time'</span>] = date</span><br><span class="line">            item[<span class="string">'date_type'</span>] = date_type</span><br><span class="line">            print(item)</span><br></pre></td></tr></table></figure>
<p>结果如下：</p>
<p><img src="/2019/11/14/python%E8%8E%B7%E5%8F%96%E4%B8%87%E5%B9%B4%E5%8E%86%E6%95%B0%E6%8D%AE%EF%BC%8C%E5%88%A4%E6%96%AD%E4%B8%80%E5%B9%B4%E4%B8%AD%E7%9A%84%E6%9F%90%E4%B8%80%E5%A4%A9%E6%98%AF%E5%90%A6%E4%B8%BA%E8%8A%82%E5%81%87%E6%97%A5/result.png" alt="结果" title="结果"></p>
]]></content>
      <categories>
        <category>python知识杂记</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
</search>
